const mongoose = require('mongoose');
const User = mongoose.model('User');

// Middleware ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö authentication
const authMiddleware = async (req, res, next) => {
  try {
    console.log('üîç DEBUG: auth_middleware ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö path:', req.path);
    
  // ‡∏Ç‡πâ‡∏≤‡∏° authentication ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö endpoint ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß
  if (
    req.path === '/create-worker-code' ||
    req.path === '/create-farmer-code' ||
    req.path.startsWith('/worker-info') ||
    req.path.includes('/worker-info/') ||
    req.path.startsWith('/worker-info/')
  ) {
      console.log('üîÑ ‡∏Ç‡πâ‡∏≤‡∏° authentication ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™');
      return next();
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Authorization header
    const authHeader = req.headers.authorization;
    
    if (!authHeader || !authHeader.startsWith('Bearer ')) {
      return res.status(401).json({ 
        success: false, 
        message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà token ‡∏´‡∏≤‡∏¢' 
      });
    }

    // ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å header
    const token = authHeader.substring(7); // ‡∏ï‡∏±‡∏î "Bearer " ‡∏≠‡∏≠‡∏Å
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å token (‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ token ‡πÄ‡∏õ‡πá‡∏ô userId)
    const user = await User.findById(token);
    
    if (!user) {
      return res.status(401).json({ 
        success: false, 
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà' 
      });
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° user object ‡∏•‡∏á‡πÉ‡∏ô request
    req.user = user;
    next();
    
  } catch (error) {
    console.error('‚ùå Auth middleware error:', error);
    return res.status(500).json({ 
      success: false, 
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö authentication' 
    });
  }
};

module.exports = authMiddleware;